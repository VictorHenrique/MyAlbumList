drop table ACHIEVEMENT cascade;
drop table ACHIEVEMENT_POR_ALBUM cascade;
drop table ACHIEVEMENT_POR_GENERO cascade;
drop table ACHIEVEMENT_USUARIO cascade;
drop table ALBUM cascade;
drop table ALBUM_ARTISTA cascade;
drop table ALBUM_GENERO cascade;
drop table ALBUM_LISTA cascade;
drop table ARTISTA cascade;
drop table ARTISTA_GENERO cascade;
drop table AVALIACAO cascade;
drop table GENERO cascade;
drop table LISTA cascade;
drop table LISTA_EDITAVEL cascade;
drop table LISTA_PADRAO cascade;
drop table SEGUE cascade;
drop table USUARIO cascade;
drop table USUARIO_AVALIACAO cascade;
drop table EDICAO cascade;


CREATE TABLE USUARIO(
    TAG VARCHAR(64),
    NOME VARCHAR(128) NOT NULL,
    FOTO_PERFIL VARCHAR(256),
    BIO VARCHAR(512),
    EMAIL VARCHAR(64) NOT NULL,
    SENHA VARCHAR(32) NOT NULL,
    GENERO CHAR(1),
    DATA_NASC DATE,
    ROCKPOINTS INTEGER DEFAULT 0,
    CIDADE VARCHAR(32),
    ESTADO CHAR(2),
    PAIS CHAR(3),
    EH_CRITICO BOOLEAN DEFAULT FALSE,
    EH_ADMINISTRADOR BOOLEAN DEFAULT FALSE,
    CONSTRAINT PK_USUARIO PRIMARY KEY (TAG),
    CONSTRAINT UNIQ_EMAIL_USUARIO UNIQUE (EMAIL)  
);

CREATE TABLE ALBUM (
    ID_SPOTIFY VARCHAR(32),
    NOME VARCHAR(256) NOT NULL,
    CAPA VARCHAR(256),
    ANO DATE,
    DURACAO INTEGER,
    CONSTRAINT PK_ALBUM PRIMARY KEY (ID_SPOTIFY)
);

CREATE TABLE GENERO (
    ID_SPOTIFY VARCHAR(32),
    DESCRICAO VARCHAR(512),
    NOME VARCHAR(32) NOT NULL,
    CONSTRAINT PK_GENERO PRIMARY KEY (ID_SPOTIFY),
    CONSTRAINT UNIQ_NOME_GENERO UNIQUE (NOME)
);

CREATE TABLE ARTISTA (
    ID_SPOTIFY VARCHAR(32),
    NOME VARCHAR(128) NOT NULL,
    FOTO VARCHAR(256),
    POPULARIDADE INTEGER,
    CONSTRAINT PK_ARTISTA PRIMARY KEY (ID_SPOTIFY)
);

CREATE TABLE ARTISTA_GENERO (
    ID_ARTISTA VARCHAR(32),
    ID_GENERO VARCHAR(32),
    CONSTRAINT PK_AG PRIMARY KEY (ID_ARTISTA, ID_GENERO),
    CONSTRAINT FK_AG_ARTISTA FOREIGN KEY (ID_ARTISTA) 
        REFERENCES ARTISTA (ID_SPOTIFY) ON DELETE CASCADE,
    CONSTRAINT FK_AG_GENERO FOREIGN KEY (ID_GENERO)
        REFERENCES GENERO (ID_SPOTIFY) ON DELETE CASCADE
);

CREATE TABLE ALBUM_ARTISTA (
    ID_ALBUM VARCHAR(32),
    ID_ARTISTA VARCHAR(32),
    CONSTRAINT PK_AA PRIMARY KEY (ID_ALBUM, ID_ARTISTA),
    CONSTRAINT FK_AA_ALBUM FOREIGN KEY (ID_ALBUM)
        REFERENCES ALBUM (ID_SPOTIFY) ON DELETE CASCADE,
    CONSTRAINT FK_AA_ARTISTA FOREIGN KEY (ID_ARTISTA) 
        REFERENCES ARTISTA (ID_SPOTIFY) ON DELETE CASCADE
);

CREATE TABLE ALBUM_GENERO (
    ID_ALBUM VARCHAR(32),
    ID_GENERO VARCHAR(32),
    CONSTRAINT PK_ALG PRIMARY KEY (ID_ALBUM, ID_GENERO),
    CONSTRAINT FK_ALG_ALBUM FOREIGN KEY (ID_ALBUM)
        REFERENCES ALBUM (ID_SPOTIFY) ON DELETE CASCADE,
    CONSTRAINT FK_ALG_GENERO FOREIGN KEY (ID_GENERO) 
        REFERENCES GENERO (ID_SPOTIFY) ON DELETE CASCADE
);

CREATE TABLE LISTA (
    TAG_USUARIO VARCHAR(64),
    N_LISTA BIGSERIAL,
    EDITAVEL BOOLEAN DEFAULT TRUE,
    CONSTRAINT PK_LISTA PRIMARY KEY (TAG_USUARIO, N_LISTA),
    CONSTRAINT FK_TAG_LISTA FOREIGN KEY (TAG_USUARIO) 
        REFERENCES USUARIO (TAG) ON DELETE CASCADE
);

CREATE TABLE LISTA_PADRAO (
    TAG_USUARIO VARCHAR(64),
    N_LISTA INTEGER,
    OUVIDOS BOOLEAN DEFAULT FALSE,
    CONSTRAINT PK_LISTA_PADRAO PRIMARY KEY (TAG_USUARIO, N_LISTA),
    CONSTRAINT FK_LP FOREIGN KEY (TAG_USUARIO, N_LISTA) 
        REFERENCES LISTA (TAG_USUARIO, N_LISTA) ON DELETE CASCADE 
);

CREATE TABLE LISTA_EDITAVEL (
    TAG_USUARIO VARCHAR(64),
    N_LISTA INTEGER,
    NOME VARCHAR(64) NOT NULL,
    CAPA VARCHAR(256),
    DESCRICAO VARCHAR(512),
    CONSTRAINT PK_LISTA_EDITAVEL PRIMARY KEY (TAG_USUARIO, N_LISTA),
    CONSTRAINT FK_LE FOREIGN KEY (TAG_USUARIO, N_LISTA) 
        REFERENCES LISTA (TAG_USUARIO, N_LISTA) ON DELETE CASCADE,
    CONSTRAINT UNIQ_NOME_LE UNIQUE (TAG_USUARIO, NOME) 
);

CREATE TABLE ALBUM_LISTA (
    TAG_USUARIO VARCHAR(64),
    N_LISTA INTEGER,
    ID_ALBUM VARCHAR(32),
    CONSTRAINT PK_ALBUM_LISTA PRIMARY KEY (TAG_USUARIO, N_LISTA, ID_ALBUM),
    CONSTRAINT FK_AL_LISTA FOREIGN KEY (TAG_USUARIO, N_LISTA)
        REFERENCES LISTA (TAG_USUARIO, N_LISTA) ON DELETE CASCADE,
    CONSTRAINT FK_AL_ALBUM FOREIGN KEY (ID_ALBUM) 
        REFERENCES ALBUM (ID_SPOTIFY) ON DELETE CASCADE
);

CREATE TABLE SEGUE (
    TAG_USUARIO1 VARCHAR(64),
    TAG_USUARIO2 VARCHAR(64),
    TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_SEGUE PRIMARY KEY (TAG_USUARIO1, TAG_USUARIO2),
    CONSTRAINT FK_USUARIO1 FOREIGN KEY (TAG_USUARIO1)
        REFERENCES USUARIO (TAG) ON DELETE CASCADE,
    CONSTRAINT FK_USUARIO2 FOREIGN KEY (TAG_USUARIO2)
        REFERENCES USUARIO (TAG) ON DELETE CASCADE,
    CONSTRAINT CHECK_SEGUE CHECK (TAG_USUARIO1 <> TAG_USUARIO2)
);

CREATE TABLE AVALIACAO (
    TAG_USUARIO VARCHAR(64),
    ID_ALBUM VARCHAR(32),
    TIMESTAMP TIMESTAMP DEFAULT CURRENT_DATE,
    ESTRELAS INTEGER DEFAULT 0,
    LIKES INTEGER DEFAULT 0,
    DISLIKES INTEGER DEFAULT 0,
    COMENTARIO VARCHAR(512),
    CONSTRAINT PK_AVALIACAO PRIMARY KEY (TAG_USUARIO, ID_ALBUM),
    CONSTRAINT FK_AVALIACAO_USUARIO FOREIGN KEY (TAG_USUARIO)
        REFERENCES USUARIO (TAG) ON DELETE CASCADE,
    CONSTRAINT FK_AVALIACAO_ALBUM FOREIGN KEY (ID_ALBUM)
        REFERENCES ALBUM (ID_SPOTIFY) ON DELETE CASCADE
);

CREATE TABLE USUARIO_AVALIACAO (
    TAG_USUARIO1 VARCHAR(64),
    TAG_USUARIO2 VARCHAR(64),
    ID_ALBUM VARCHAR(32),
    ACAO CHAR(1) NOT NULL,
    TIMESTAMP TIMESTAMP DEFAULT CURRENT_DATE,
    CONSTRAINT PK_UA PRIMARY KEY (TAG_USUARIO1, TAG_USUARIO2, ID_ALBUM),
    CONSTRAINT FK_USUARIO1_UA FOREIGN KEY (TAG_USUARIO1)
        REFERENCES USUARIO (TAG) ON DELETE CASCADE,
    CONSTRAINT FK_AVALIACAO_UA FOREIGN KEY (TAG_USUARIO2, ID_ALBUM)
        REFERENCES AVALIACAO (TAG_USUARIO, ID_ALBUM) ON DELETE CASCADE,
    CONSTRAINT CHECK_ACAO CHECK (ACAO IN ('D', 'L'))
);

CREATE TABLE ACHIEVEMENT (
    NOME VARCHAR(128),
    DESCRICAO VARCHAR(512),
    REWARD INTEGER NOT NULL,
    ATIVO BOOLEAN DEFAULT FALSE,
    CONSTRAINT PK_ACHIEVEMENT PRIMARY KEY (NOME)
);

CREATE TABLE ACHIEVEMENT_USUARIO (
    TAG_USUARIO VARCHAR(64),
    NOME VARCHAR(128),
    CONSTRAINT PK_AU PRIMARY KEY (TAG_USUARIO, NOME),
    CONSTRAINT FK_USUARIO_AU FOREIGN KEY (TAG_USUARIO)
        REFERENCES USUARIO (TAG) ON DELETE CASCADE,
    CONSTRAINT FK_NOME_AU FOREIGN KEY (NOME)
        REFERENCES ACHIEVEMENT (NOME) ON DELETE CASCADE
);

CREATE TABLE ACHIEVEMENT_POR_ALBUM (
    NOME VARCHAR(128),
    ID_ALBUM VARCHAR(32),
    CONSTRAINT PK_APA PRIMARY KEY (NOME, ID_ALBUM),
    CONSTRAINT FK_NOME_APA FOREIGN KEY (NOME)
        REFERENCES ACHIEVEMENT (NOME) ON DELETE CASCADE,
    CONSTRAINT FK_ALBUM_APA FOREIGN KEY (ID_ALBUM)
        REFERENCES ALBUM (ID_SPOTIFY) ON DELETE CASCADE
);

CREATE TABLE ACHIEVEMENT_POR_GENERO (
    NOME VARCHAR(128),
    ID_GENERO VARCHAR(32),
    QUANTIDADE INTEGER NOT NULL,
    CONSTRAINT PK_APG PRIMARY KEY (NOME, ID_GENERO),
    CONSTRAINT FK_NOME_APG FOREIGN KEY (NOME)
        REFERENCES ACHIEVEMENT (NOME) ON DELETE CASCADE,
    CONSTRAINT FK_ALBUM_APG FOREIGN KEY (ID_GENERO)
        REFERENCES GENERO (ID_SPOTIFY) ON DELETE CASCADE
);

CREATE TABLE EDICAO (                           
    TAG_USUARIO VARCHAR(64),
    N_LISTA INTEGER,
    TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICACAO CHAR(1) NOT NULL,
    CONSTRAINT PK_EDICAO PRIMARY KEY (TAG_USUARIO, N_LISTA),
    CONSTRAINT FK_EDICAO FOREIGN KEY (TAG_USUARIO, N_LISTA)
        REFERENCES LISTA_EDITAVEL (TAG_USUARIO, N_LISTA) ON DELETE CASCADE,
    CONSTRAINT CHECK_EDICAO CHECK (MODIFICACAO IN ('C', 'M'))
);

